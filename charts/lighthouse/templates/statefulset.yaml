apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "lighthouse.fullname" . }}
  labels:
    {{- include "lighthouse.labels" . | nindent 4 }}
    app.kubernetes.io/component: lighthouse
spec:
  serviceName: {{ include "lighthouse.fullname" . }}-p2p
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: {{ .Release.Name }}
      {{- include "lighthouse.selectorLabels" (list . "lighthouse") | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "lighthouse.labels" . | nindent 8 }}
        {{- include "lighthouse.selectorLabels" (list . "lighthouse") | nindent 8 }}
    spec:
      enableServiceLinks: false # avoid LIGHTHOUSE env var issues if helmrelease name is lighthouse.
      containers:
        - name: lighthouse
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          args:
            - lighthouse
            - beacon_node
            - "--network={{ .Values.network }}"
            - "--datadir=/var/lib/lighthouse"
            - "--discovery-port={{ .Values.p2p.port }}"
            - "--port={{ .Values.p2p.port }}"
            - "--quic-port={{ .Values.quic.port }}"
            {{- if .Values.execution.enabled }}
            {{- $defaultEndpoint := printf "http://el-geth-engine:%d" (int .Values.execution.enginePort) -}}
            {{- $endpoint := default $defaultEndpoint .Values.execution.endpoint -}}
            {{- if .Values.jwt.enabled }}
            - "--execution-endpoint={{ $endpoint }}"
            - "--execution-jwt=/secrets/jwt"
            {{- else }}
            - "--execution-endpoint={{ $endpoint }}"
            {{- end }}
            {{- end }}
            {{- if .Values.api.enabled }}
            - "--http"
            - "--http-address=0.0.0.0"
            - "--http-port={{ .Values.api.port }}"
            {{- end }}
            {{- if .Values.metrics.enabled }}
            - "--metrics"
            - "--metrics-address=0.0.0.0"
            - "--metrics-port={{ .Values.metrics.port }}"
            {{- end }}
            {{- if .Values.checkpointSyncUrl }}
            - "--checkpoint-sync-url={{ .Values.checkpointSyncUrl }}"
            {{- end }}
          ports:
            - name: p2p-tcp
              containerPort: {{ .Values.p2p.port }}
              protocol: TCP
            - name: p2p-udp
              containerPort: {{ .Values.p2p.port }}
              protocol: UDP
            - name: quic-udp
              containerPort: {{ .Values.quic.port }}
              protocol: UDP
            {{- if .Values.api.enabled }}
            - name: api
              containerPort: {{ .Values.api.port }}
              protocol: TCP
            {{- end }}
            {{- if .Values.metrics.enabled }}
            - name: metrics
              containerPort: {{ .Values.metrics.port }}
              protocol: TCP
            {{- end }}
          volumeMounts:
            - name: data
              mountPath: /var/lib/lighthouse
            {{- if and .Values.jwt.enabled .Values.execution.enabled }}
            - name: jwt
              mountPath: /secrets
              readOnly: true
            {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
      {{- if and .Values.jwt.enabled }}
        - name: jwt
          secret:
            secretName: {{ if .Values.jwt.existingSecret }}{{ .Values.jwt.existingSecret }}{{ end }}
            items:
              - key: {{ .Values.jwt.existingSecretKey | default "jwt" }}
                path: jwt
      {{- end }} 
  {{-  if .Values.persistence.existingClaim }}
        - name: data
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.existingClaim }}
  {{- else }}
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes:
          {{- toYaml .Values.persistence.accessModes | nindent 10 }}
        resources:
          requests:
            storage: {{ .Values.persistence.size }}
        {{- if .Values.persistence.storageClass }}
        storageClassName: {{ .Values.persistence.storageClass }}
        {{- end }}
  {{- end }}
