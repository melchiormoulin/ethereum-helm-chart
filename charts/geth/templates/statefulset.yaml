apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "geth.fullname" . }}
  labels:
    {{- include "geth.labels" . | nindent 4 }}
    app.kubernetes.io/component: geth
spec:
  serviceName: {{ include "geth.fullname" . }}-p2p
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: {{ .Release.Name }}
      {{- include "geth.selectorLabels" (list . "geth") | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "geth.labels" . | nindent 8 }}
        {{- include "geth.selectorLabels" (list . "geth") | nindent 8 }}
    spec:
      enableServiceLinks: false
      containers:
        - name: geth
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          args:
            - "--{{ .Values.network }}"
            - "--syncmode={{ .Values.syncMode }}"
            - "--datadir=/var/lib/geth"
            - "--port={{ .Values.p2p.port }}"
            {{- if and .Values.jwt.enabled .Values.authrpc.enabled }}
            - "--authrpc.addr=0.0.0.0"
            - "--authrpc.port={{ .Values.authrpc.port }}"
            - "--authrpc.vhosts=*"
            - "--authrpc.jwtsecret=/secrets/jwt"
            {{- end }}
            {{- if .Values.metrics.enabled }}
            - "--metrics"
            - "--metrics.addr=0.0.0.0"
            - "--metrics.port={{ .Values.metrics.port }}"
            {{- end }}
            {{- if .Values.http.enabled }}
            - "--http"
            - "--http.addr=0.0.0.0"
            - "--http.port={{ .Values.http.port }}"
            - "--http.corsdomain={{ join "," .Values.http.corsOrigins }}"
            - "--http.vhosts={{ join "," .Values.http.vhosts }}"
            {{- if .Values.http.wsEnabled }}
            - "--ws"
            - "--ws.addr=0.0.0.0"
            - "--ws.port={{ .Values.http.wsPort }}"
            {{- end }}
            {{- end }}
          ports:
            - name: p2p-tcp
              containerPort: {{ .Values.p2p.port }}
              protocol: TCP
            - name: p2p-udp
              containerPort: {{ .Values.p2p.port }}
              protocol: UDP
            {{- if .Values.http.enabled }}
            - name: http
              containerPort: {{ .Values.http.port }}
              protocol: TCP
            {{- if .Values.http.wsEnabled }}
            - name: ws
              containerPort: {{ .Values.http.wsPort }}
              protocol: TCP
            {{- end }}
            {{- end }}
            {{- if and .Values.jwt.enabled .Values.authrpc.enabled }}
            - name: engine
              containerPort: {{ .Values.authrpc.port }}
              protocol: TCP
            {{- end }}
            {{- if .Values.metrics.enabled }}
            - name: metrics
              containerPort: {{ .Values.metrics.port }}
              protocol: TCP
            {{- end }}
          volumeMounts:
            - name: data
              mountPath: /var/lib/geth
            {{- if and .Values.jwt.enabled .Values.authrpc.enabled }}
            - name: jwt
              mountPath: /secrets
              readOnly: true
            {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}

      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
      {{- if and .Values.jwt.enabled .Values.authrpc.enabled }}
        - name: jwt
          secret:
            secretName: {{ if .Values.jwt.existingSecret }}{{ .Values.jwt.existingSecret }}{{ end }}
            items:
              - key: {{ .Values.jwt.existingSecretKey | default "jwt" }}
                path: jwt
      {{- end }}
  {{-  if .Values.persistence.existingClaim }}
        - name: data
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.existingClaim }}
  {{- else }}
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes:
          {{- toYaml .Values.persistence.accessModes | nindent 10 }}
        resources:
          requests:
            storage: {{ .Values.persistence.size }}
        {{- if .Values.persistence.storageClass }}
        storageClassName: {{ .Values.persistence.storageClass }}
        {{- end }}
  {{- end }}
