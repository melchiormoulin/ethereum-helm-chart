# --- Image & runtime ---
image:
  repository: rocketpool/smartnode
  tag: v1.18.1   
  pullPolicy: IfNotPresent

replicaCount: 1
podAnnotations: {}
podLabels: {}

resources:
  requests:
    cpu: "200m"
    memory: "512Mi"
  limits: {}

nodeSelector: {}
tolerations: []
affinity: {}



# Optionally override entrypoint if your image uses a different start command.
# Default tries to run the Smartnode in foreground so K8s can manage it.
command: ["rocketpool"]
args: [ "--settings=/etc/.rocketpool/user-settings.yml","node" ]



# --- Persistence ---
persistence:
  enabled: true
  storageClass: "local-storage-ssd"   # adapt to your default class
  accessModes: ["ReadWriteOnce"]
  size: 50Gi
  existingClaim: ""                   # if you want to bind an existing PVC
  volumeMode: "Filesystem"             # or "Block" if you use raw block storage
  volumeName: "rocketpool-smartnode"       # specify a particular PV to bind to
  mountPath: /root/.rocketpool  # where to mount the volume in the container

# --- Service ---
service:
  type: ClusterIP
  annotations: {}
  labels: {}
  ports:
    # expose any HTTP status / metrics your Smartnode uses
    http:
      enabled: true
      port: 9101
      targetPort: 9101
    metrics:
      enabled: true
      port: 9102
      targetPort: 9102

# --- ServiceMonitor (Prometheus Operator) ---
serviceMonitor:
  enabled: false
  namespace: ""       # where your Prometheus Operator expects ServiceMonitors
  interval: 30s
  scrapeTimeout: 10s
  additionalLabels: {}
